plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'com.track.finance2up'
    compileSdk SdkVersions.compileSdkVersion

    defaultConfig {
        applicationId "com.track.finance2up"
        minSdk SdkVersions.minSdkVersion
        targetSdk SdkVersions.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['KEY_ALIAS']
            keyPassword keystoreProperties['KEY_PASSWORD']
//            storeFile file(keystoreProperties['STORE_FILE'])
            storePassword keystoreProperties['STORE_PASSWORD']
        }
    }

    buildTypes {
        release {
            resValue "string", "app_name", "Finance2Up"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            resValue "string", "app_name", "Finance2Up dbg"
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility SdkVersions.javaVersion
        targetCompatibility SdkVersions.javaVersion
    }
    kotlinOptions {
        jvmTarget = SdkVersions.jvmTarget
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion SdkVersions.kotlinCompilerVersion
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += 'META-INF/gradle/incremental.annotation.processors'
        }
    }
}

dependencies {

    implementation AndroidLibraries.coreKtx
    implementation AndroidLibraries.lifecycleRuntime
    implementation Compose.activityCompose
    implementation Compose.composeUi
    implementation Compose.composeUiPreview
    implementation Compose.composeMaterial3

    implementation Libraries.daggerHilt
    kapt Libraries.hiltCompiler
    implementation Libraries.hiltNavigationCompose

    implementation AndroidLibraries.hawk

    implementation project(Modules.common)
    implementation project(Modules.navigation)
    implementation project(Modules.remote)
    implementation project(Modules.authentication)

    testImplementation TestLibraries.junit
    androidTestImplementation TestLibraries.ext
    androidTestImplementation TestLibraries.espresso
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    debugImplementation Libraries.hyperionCore
    debugImplementation Libraries.hyperionCrash
    debugImplementation Libraries.hyperionMeasurement

    implementation Libraries.timber

    implementation platform(Libraries.firebaseBom)
    implementation Libraries.firebaseCrashlytics
    implementation Libraries.firebaseAnalytics

    implementation Compose.composeMaterial

    implementation Compose.navigation

    implementation project(Route.trans)
    implementation project(Route.stats)
    implementation project(Route.account)
    implementation project(Route.more)

}

kapt {
    correctErrorTypes true
}